
/**
 * @file
 * buildResponse.js
 * Build the response for creating, updating or getting a client
 * Response is based on the registrationInfo stored as a custom attribute in the Apigee App created for the client
 */
 
 function isEmpty(data){
   if ( data === null || data === undefined || data === ''){
       return true;
   }
   return false;
}
var adrDetailsFromMs = JSON.parse(context.getVariable("ADRDetailsFromMS.content"));
var SSA = context.getVariable("SSA");
var theResponse = adrDetailsFromMs;
// Add SSA, client id, and when it was created/modified. Return the client_id generated by the OIDC provider (if app is being created) or the client_id associated with the token in get/update client registration operation
if ( isEmpty(theResponse.software_statement)){
    theResponse.software_statement = SSA; 
}
if (context.getVariable("request.verb") === "POST") {
   // If client has just been registered, client_id will be available  as part of the app creation response
   // Also make sure response code is 201 Created
   theResponse.client_id = context.getVariable("theAppId");
   context.setVariable("response.status.code",201);
   context.setVariable("response.reason.phrase", "Created");
}
theResponse.client_id_issued_at = Math.trunc(context.getVariable("clientIssuedAt") / 1000);

// Set sectorIdUri
var sectorIdUriFromApigee = context.getVariable("ADRDetailsFromSSA.sector_identifier_uri");
if ( isEmpty(theResponse.sector_identifier_uri)){
    
    if (! isEmpty(sectorIdUriFromApigee)){
        theResponse.sector_identifier_uri = sectorIdUriFromApigee; 
    }

}
context.setVariable("response.header.Content-Type", "application/json");
context.setVariable("response.content", JSON.stringify(theResponse));
