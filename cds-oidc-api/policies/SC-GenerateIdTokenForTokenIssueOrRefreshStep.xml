<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ServiceCallout name="SC-GenerateIdTokenForTokenIssueOrRefreshStep" continueOnError="false">
  <DisplayName>SC-GenerateIdTokenForTokenIssueOrRefreshStep</DisplayName>
  <Request clearPayload="true" variable="idTokenRequest">
    <Set>
      <Payload contentType="application/json">{
  "sub": "{customerPPId}",
  "aud": "{apigee.client_id}",
  "at_hash": "{CDS.tokencode_hash}",
  "updated_at": {CDS.updateAtEpoch},
  "auth_time": {CDS.authTimeEpoch},
  "iss": "{issuer}",
  "nbf": {CDS.updateAtEpoch},
  "exp": {CDS.tokenExp},
  "nonce": "{CDS.nonce}",
  "refresh_token_expires_at": {refreshTokenExpiresAt},
  "sharing_expires_at": {refreshTokenExpiresAt},
  "iat": {CDS.updateAtEpoch},
  "acr": "{acrUsed}",
  "jti": "{createUuid()}"
}</Payload>
      <Verb>POST</Verb>
      <Path>/external/{CDS.brandId}/token/sign</Path>
    </Set>
  </Request>
  <Response>idTokenResponse</Response>
  <Timeout>10000</Timeout>
  <HTTPTargetConnection>
    <Properties>
      <Property name="success.codes">2xx</Property>
      <Property name="io.timeout.millis">5000</Property>
    </Properties>
    <LoadBalancer>
      <Server name="cds-token-microservice"/>
    </LoadBalancer>
    <Path>{CDS.serviceEnvPath}/token-service/v1</Path>
  </HTTPTargetConnection>
</ServiceCallout>